{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}

{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign margin_horizontal_mobile = section.settings.margin_horizontal_mobile
  assign margin_horizontal = section.settings.margin_horizontal
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width
  assign lazy = section.settings.lazy
  assign section_radius = section.settings.section_radius

  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_size_mobile = section.settings.heading_size_mobile
  assign heading_color = section.settings.heading_color
  assign heading_custom = section.settings.heading_custom
  assign heading_font = section.settings.heading_font
  assign heading_height = section.settings.heading_height
  assign heading_align_mobile = section.settings.heading_align_mobile
  assign heading_align = section.settings.heading_align

  assign tabs_width = section.settings.tabs_width
  assign tabs_width_mobile = section.settings.tabs_width_mobile
  assign tabs_radius = section.settings.tabs_radius
  assign tabs_border_thickness = section.settings.tabs_border_thickness
  assign tabs_border_color = section.settings.tabs_border_color
  assign tab_active_bg_color = section.settings.tab_active_bg_color
  assign tabs_mt = section.settings.tabs_mt
  assign tabs_mt_mobile = section.settings.tabs_mt_mobile

  assign layout_gap_mobile = section.settings.layout_gap_mobile
  assign layout_gap = section.settings.layout_gap
  assign layout = section.settings.layout
  assign layout_mobile = section.settings.layout_mobile
  assign layout_mt = section.settings.layout_mt
  assign layout_mt_mobile = section.settings.layout_mt_mobile

  assign tab_custom = section.settings.tab_custom
  assign tab_font = section.settings.tab_font
  assign tab_size = section.settings.tab_size
  assign tab_size_mobile = section.settings.tab_size_mobile
  assign tab_height = section.settings.tab_height
  assign tab_color = section.settings.tab_color
  assign tab_active_color = section.settings.tab_active_color

  assign text_content_align = section.settings.text_content_align
  assign text_content_align_mobile = section.settings.text_content_align_mobile

  assign title_custom = section.settings.title_custom
  assign title_font = section.settings.title_font
  assign title_size = section.settings.title_size
  assign title_size_mobile = section.settings.title_size_mobile
  assign title_height = section.settings.title_height
  assign title_color = section.settings.title_color

  assign sub_text_custom = section.settings.sub_text_custom
  assign sub_text_font = section.settings.sub_text_font
  assign sub_text_size = section.settings.sub_text_size
  assign sub_text_size_mobile = section.settings.sub_text_size_mobile
  assign sub_text_height = section.settings.sub_text_height
  assign sub_text_color = section.settings.sub_text_color
  assign sub_text_mt = section.settings.sub_text_mt
  assign sub_text_mt_mobile = section.settings.sub_text_mt_mobile
  
  assign text_custom = section.settings.text_custom
  assign text_font = section.settings.text_font
  assign text_size = section.settings.text_size
  assign text_size_mobile = section.settings.text_size_mobile
  assign text_height = section.settings.text_height
  assign text_color = section.settings.text_color
  assign text_mt = section.settings.text_mt
  assign text_mt_mobile = section.settings.text_mt_mobile

  assign image_ratio_mobile = section.settings.image_ratio_mobile
  assign image_ratio = section.settings.image_ratio
  assign image_border_color = section.settings.image_border_color
  assign image_border_thickness = section.settings.image_border_thickness
  assign image_radius = section.settings.image_radius

  assign btn_size_mobile = section.settings.btn_size_mobile
  assign btn_size = section.settings.btn_size
  assign btn_border_thickness = section.settings.btn_border_thickness
  assign btn_border_color = section.settings.btn_border_color
  assign btn_arrow_color = section.settings.btn_arrow_color
  assign line_color = section.settings.line_color
  assign btn_arrow_size_mobile = section.settings.btn_arrow_size_mobile
  assign btn_arrow_size = section.settings.btn_arrow_size

  assign badge_padding_horizontal = section.settings.badge_padding_horizontal
  assign badge_padding_horizontal_mobile = section.settings.badge_padding_horizontal_mobile
  assign badge_padding_vertical = section.settings.badge_padding_vertical
  assign badge_padding_vertical_mobile = section.settings.badge_padding_vertical_mobile
  assign badge_bg_color = section.settings.badge_bg_color
  assign badge_radius = section.settings.badge_radius
  assign badge_custom = section.settings.badge_custom
  assign badge_font = section.settings.badge_font
  assign badge_size = section.settings.badge_size
  assign badge_size_mobile = section.settings.badge_size_mobile
  assign badge_height = section.settings.badge_height
  assign badge_color = section.settings.badge_color

  assign media_text_custom = section.settings.media_text_custom
  assign media_text_font = section.settings.media_text_font
  assign media_text_size = section.settings.media_text_size
  assign media_text_size_mobile = section.settings.media_text_size_mobile
  assign media_text_height = section.settings.media_text_height
  assign media_text_color = section.settings.media_text_color
-%}

{%- style -%}
  {{  heading_font | font_face: font_display: 'swap' }}
  {{ tab_font | font_face: font_display: 'swap' }}
  {{ title_font | font_face: font_display: 'swap' }}
  {{ sub_text_font | font_face: font_display: 'swap' }}
  {{ text_font | font_face: font_display: 'swap' }}
  {{ badge_font | font_face: font_display: 'swap' }}
  {{ media_text_font | font_face: font_display: 'swap' }}

  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
    margin-left: {{ margin_horizontal_mobile }}rem;
    margin-right: {{ margin_horizontal_mobile }}rem;
    border-radius: {{ section_radius | times: 0.6 | round: 0 }}px;
    overflow: hidden;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .tabs-heading-{{ section.id }} {
    text-align: {{ heading_align_mobile }};
  }

  .tabs-heading-{{ section.id }} * {
    margin: 0px;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    line-height: {{ heading_height }}%;
    text-transform: unset;
    word-wrap: break-word;
    font-weight: 700;
  }

  .tabs-tabs-wrapper-{{ section.id }} {
    max-width: {{ tabs_width_mobile }}px;
    width: 100%;
    margin: 0 auto;
    position: relative;
    display: flex;
    align-items: center;
    margin-top: {{ tabs_mt_mobile }}px;
    border-radius: {{ tabs_radius }}px;
    border: {{ tabs_border_thickness }}px solid {{ tabs_border_color }};
    height: 54px;
  }

  .tabs-tab-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    margin: 0;
    flex: 1;
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ tab_size_mobile }}px;
    line-height: {{ tab_height }}%;
    color: {{ tab_color }};
    cursor: pointer;
    position: relative;
    z-index: 2;
    transition: all 0.25s ease 0s;
  }

  .tabs-tab-{{ section.id }}.active {
    color: {{ tab_active_color }};
    transition: all 0.25s ease 0s;
  }

  .tabs-active-bg-{{ section.id }} {
    display: block !important;
    position: absolute;
    width: calc((100% / {{ section.blocks.size }}) + 4px);
    height: 100%;
    border-radius: {{ tabs_radius }}px;
    top: 0;
    background: {{ tab_active_bg_color }};
    z-index: 1;
    margin-left: -{{ tabs_border_thickness }}px;
    transition: all 0.5s ease 0s;
  }

  .tabs-content-{{ section.id }} {
    display: none;
    margin-top: {{ layout_mt_mobile }}px;   
    grid-template-columns: 1fr;
    align-items: center;
    gap: {{ layout_gap_mobile }}px;
  }

  .tabs-content-{{ section.id }}.active {
    display: grid;  
  }

  .tabs-title-{{ section.id }} {
    margin: 0;    
    text-align: {{ text_content_align_mobile }};
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ title_size_mobile }}px;
    line-height: {{ title_height }}%;
    color: {{ title_color }};
    font-weight: 700;
  }

  .tabs-subtext-{{ section.id }} {
    text-align: {{ text_content_align_mobile }};
    margin-top: {{ sub_text_mt_mobile }}px;    
  }

  .tabs-subtext-{{ section.id }} * {
    margin: 0;    
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ sub_text_size_mobile }}px;
    line-height: {{ sub_text_height }}%;
    color: {{ sub_text_color }};  
  }

  .tabs-text-{{ section.id }} {
    text-align: {{ text_content_align_mobile }};
    margin-top: {{ text_mt_mobile }}px;    
  }

  .tabs-text-{{ section.id }} * {
    margin: 0;    
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ text_size_mobile }}px;
    line-height: {{ text_height }}%;
    color: {{ text_color }};  
  }
  
  .tabs-button-{{ section.id }} {
    width: {{ btn_size_mobile }}px;
    height: {{ btn_size_mobile }}px;
    border-radius: 50%;
    border: {{ btn_border_thickness }}px solid {{ btn_border_color }};
    backdrop-filter: blur(7px);
    -webkit-backdrop-filter: blur(7px);
    box-shadow: rgba(0, 0, 0, 0.35) 0px 0px 7px;
    display: flex !important;
    align-items: center;
    justify-content: center;
    z-index: 3;
    position: relative;
  }

  .tabs-button-{{ section.id }}::after {
    content: '';
    padding: 3px;
    display: inline-block;
    border: solid {{ btn_arrow_color }};
    border-width: 0 2px 2px 0;
    transform: rotate(-45deg) scale({{ btn_arrow_size_mobile }}%) translateY(-50%);
  }

  .tabs-button-{{ section.id }}::before {
    content: '';
    padding: 3px;
    display: inline-block;
    border: solid {{ btn_arrow_color }};
    border-width: 0 2px 2px 0;
    transform: rotate(135deg) scale({{ btn_arrow_size_mobile }}%) translateX(-50%);
  }

  .tabs-button-{{ section.id }}:before {
    content: '';
    height: calc(50% - {{ btn_size_mobile | times: 0.50 | round: 0 }}px);
    top: 50%;
    left: 15%;
    width: 3px;
    color: {{ line_color }};
    z-index: -1;
    position: absolute;
  }
  
  .tabs-button-{{ section.id }}:after {
    content: '';
    height: calc(50% - {{ btn_size_mobile | times: 0.50 | round: 0 }}px);
    top: 50%;
    right: 15%;
    width: 3px;
    color: {{ line_color }};
    z-index: -1;
    position: absolute;
  }

  .tabs-image-relative-{{ section.id }} {
    position: relative;
    height: 100%;
  }

  .tabs-image-relative-{{ section.id }} img,
  .tabs-image-relative-{{ section.id }} svg {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .tabs-image-relative-{{ section.id }} svg {
    background-color: #AFAFAF;
  }

  .tabs-image-wrapper-{{ section.id }} {    
    position: relative;
    border: {{ image_border_thickness }}px solid {{ image_border_color }};  
    border-radius: {{ image_radius }}px;
    --text-primary: 26 26 26;
    --shadow: 0 5px 15px rgb(var(--text-primary) / 0.1);
    filter: drop-shadow(var(--shadow));
    user-select: none;
    overflow: hidden;
  }

  .tabs-image-cursor-{{ section.id }} {
    height: 100%;
    width: max-content;
    touch-action: none;
    --transform-logical-flip: 1;
    transform: translate(calc(var(--transform-logical-flip) * -50% + var(--clip-path-offset, 0px)),-50%);
    cursor: grab;
    will-change: transform;
    place-items: center;
    display: grid;
    position: relative;
    top: 50%;
    left: var(--before-after-initial-drag-position, 0px);
  }
  
  .tabs-image-cursor-{{ section.id }}:before {
    content: '';
    height: calc(50% - {{ btn_size_mobile | times: 0.5 | round: 0 }}px);
    top: 0;
    width: {{ btn_border_thickness }}px;
    background: {{ line_color }};
    z-index: -1;
    position: absolute;
  }
  
  .tabs-image-cursor-{{ section.id }}:after {
    content: '';
    height: calc(50% - {{ btn_size_mobile | times: 0.5 | round: 0 }}px);
    bottom: 0;
    width: {{ btn_border_thickness }}px;
    background: {{ line_color }};
    z-index: -1;
    position: absolute;
  }

  .tabs-before-badge-{{ section.id }},
  .tabs-after-badge-{{ section.id }} {
    position: absolute;
    top: 10px;
    padding: {{ badge_padding_vertical_mobile }}px {{ badge_padding_horizontal_mobile }}px;
    border-radius: {{ badge_radius }}px;
    background-color: {{ badge_bg_color | hex_to_rgba: 0.4 }};
    margin: 0;    
    text-align: center;
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ badge_size_mobile }}px;
    line-height: {{ badge_height }}%;
    color: {{ badge_color }};  
  }

  .tabs-before-badge-{{ section.id }} {
    left: 10px;
  }

  .tabs-after-badge-{{ section.id }} {
    right: 10px;
  }

  .tabs-media-text-{{ section.id }} {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    width: 70%;
  }

  .tabs-media-text-{{ section.id }} * {
    margin: 0;    
    text-align: center;
    text-transform: unset;
    word-wrap: break-word;
    font-size: {{ media_text_size_mobile }}px;
    line-height: {{ media_text_height }}%;
    color: {{ media_text_color }};  
  }
  
  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
      margin-left: {{ margin_horizontal }}rem;
      margin-right: {{ margin_horizontal }}rem;
      border-radius: {{ section_radius }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .tabs-heading-{{ section.id }} {
      text-align: {{ heading_align }};
    }

    .tabs-heading-{{ section.id }} * {
      font-size: {{ heading_size }}px;
    }

    .tabs-tabs-wrapper-{{ section.id }} {
      max-width: {{ tabs_width }}px;
      margin-top: {{ tabs_mt }}px;
    }

    .tabs-tab-{{ section.id }} {
      font-size: {{ tab_size }}px;
    }
    
    .tabs-content-{{ section.id }} {
      margin-top: {{ layout_mt }}px;   
      grid-template-columns: 0.5fr 1fr;
      gap: {{ layout_gap }}px;
    }

    .tabs-title-{{ section.id }} {
      text-align: {{ text_content_align }};
      font-size: {{ title_size }}px;    
    }

    .tabs-subtext-{{ section.id }} {
      text-align: {{ text_content_align }};
      margin-top: {{ sub_text_mt }}px;    
    }

    .tabs-subtext-{{ section.id }} * {
      font-size: {{ sub_text_size }}px;
    }

    .tabs-text-{{ section.id }} {
      text-align: {{ text_content_align }};
      margin-top: {{ text_mt }}px;    
    }

    .tabs-text-{{ section.id }} * {
      font-size: {{ text_size }}px; 
    }    

    .tabs-button-{{ section.id }} {
      width: {{ btn_size }}px;
      height: {{ btn_size }}px;
    }

    .tabs-button-{{ section.id }}::after {
      transform: rotate(-45deg) scale({{ btn_arrow_size }}%) translateY(-50%);
      height: calc(50% - {{ btn_size | times: 0.50 | round: 0 }}px);
    }

    .tabs-button-{{ section.id }}::before {
      transform: rotate(135deg) scale({{ btn_arrow_size }}%) translateX(-50%);
      height: calc(50% - {{ btn_size | times: 0.50 | round: 0 }}px);
    }

    .tabs-image-cursor-{{ section.id }}:before {
      height: calc(50% - {{ btn_size | times: 0.5 | round: 0 }}px);
    }

    .tabs-image-cursor-{{ section.id }}:after {
      height: calc(50% - {{ btn_size | times: 0.5 | round: 0 }}px);
    }

    .tabs-before-badge-{{ section.id }},
    .tabs-after-badge-{{ section.id }} {
      padding: {{ badge_padding_vertical }}px {{ badge_padding_horizontal }}px;
      font-size: {{ badge_size }}px; 
    }

    .tabs-media-text-{{ section.id }} {
      width: 70%;
    }

    .tabs-media-text-{{ section.id }} * {
      font-size: {{ media_text_size }}px;
    }
  }
  
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}px;
    }
  </style>
{% endunless %}

{% if margin_horizontal_mobile > 0 %}
  <style>
    .section-{{ section.id }} {
      border-left: solid {{ border_color }} {{ border_thickness }}px;
      border-right: solid {{ border_color }} {{ border_thickness }}px;
    }
    
    @media(min-width: 1024px) {
      .section-{{ section.id }} {
        border-left: 0px;
        border-right: 0px;
      }
    }
  </style>
{% endif %}

{% if margin_horizontal > 0 %}
  <style>
    @media(min-width: 1024px) {
      .section-{{ section.id }} {
        border-left: solid {{ border_color }} {{ border_thickness }}px;
        border-right: solid {{ border_color }} {{ border_thickness }}px;
      }
    }
  </style>
{% endif %}

{% if heading_custom %}
  <style>
    .tabs-heading-{{ section.id }} * {
      font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
      font-weight: {{ heading_font.weight }};
      font-style: {{ heading_font.style }};
    }
  </style>
{% endif %}

{% if tab_custom %}
  <style>
    .tabs-tab-{{ section.id }} {
      font-family: {{ tab_font.family }}, {{ tab_font.fallback_families }};
      font-weight: {{ tab_font.weight }};
      font-style: {{ tab_font.style }};
    }
  </style>
{% endif %}

{% if title_custom %}
  <style>
    .tabs-title-{{ section.id }} {
      font-family: {{ title_font.family }}, {{ title_font.fallback_families }};
      font-weight: {{ title_font.weight }};
      font-style: {{ title_font.style }};
    }
  </style>
{% endif %}

{% if sub_text_custom %}
  <style>
    .tabs-subtext-{{ section.id }} * {
      font-family: {{ sub_text_font.family }}, {{ sub_text_font.fallback_families }};
      font-weight: {{ sub_text_font.weight }};
      font-style: {{ sub_text_font.style }};
    }
  </style>
{% endif %}

{% if text_custom %}
  <style>
    .tabs-text-{{ section.id }} * {
      font-family: {{ text_font.family }}, {{ text_font.fallback_families }};
      font-weight: {{ text_font.weight }};
      font-style: {{ text_font.style }};
    }
  </style>
{% endif %}

{% if badge_custom %}
  <style>
    .tabs-before-badge-{{ section.id }},
    .tabs-after-badge-{{ section.id }} {
      font-family: {{ badge_font.family }}, {{ badge_font.fallback_families }};
      font-weight: {{ badge_font.weight }};
      font-style: {{ badge_font.style }};
    }
  </style>
{% endif %}

{% if media_text_custom %}
  <style>    
    .tabs-media-text-{{ section.id }} * {
      font-family: {{ media_text_font.family }}, {{ media_text_font.fallback_families }};
      font-weight: {{ media_text_font.weight }};
      font-style: {{ media_text_font.style }};
    }
  </style>
{% endif %}


{% if layout_mobile == "images_text" %}
  <style>
    
    .tabs-text-wrap-{{ section.id }} {
      order: 2;
    }
    
    .tabs-image-right-{{ section.id }} {
      order: 1;
    }
  </style>
{% else %}
  <style>
    .tabs-text-wrap-{{ section.id }} {
      order: 1;
    }
    
    .tabs-image-right-{{ section.id }} {
      order: 2;
    }
  </style>
{% endif %}

{% if layout == "images_text" %}
  <style>
    @media(min-width: 1024px) {
      .tabs-content-{{ section.id }} {
        grid-template-columns: 1fr 0.5fr;
      }

      .tabs-text-wrap-{{ section.id }} {
        order: 2;
      }
      
      .tabs-image-right-{{ section.id }} {
        order: 1;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
      .tabs-content-{{ section.id }} {
        grid-template-columns: 0.5fr 1fr;
      }

      .tabs-text-wrap-{{ section.id }} {
        order: 1;
      }
      
      .tabs-image-right-{{ section.id }} {
        order: 2;
      }
    }
  </style>
{% endif %}

{% if image_ratio_mobile == "portrait" %}
  <style>
    .tabs-image-relative-{{ section.id }} {
     aspect-ratio: 9.6/14; 
    }
  </style>
{% elsif image_ratio_mobile == "landscape" %}
  <style>
    .tabs-image-relative-{{ section.id }}{
     aspect-ratio: 12/9; 
    }
  </style>
{% elsif image_ratio_mobile == "square" %}
  <style>
    .tabs-image-relative-{{ section.id }} {
     aspect-ratio: 12/12; 
    }
  </style>
{% else%}
  <style>
   .tabs-image-relative-{{ section.id }} {
     aspect-ratio: auto; 
    }
  </style>
{% endif %}

{% if image_ratio == "portrait" %}
  <style>
    @media(min-width: 1024px) {
     .tabs-image-relative-{{ section.id }} {
       aspect-ratio: 9.6/14; 
      } 
    }
  </style>
{% elsif image_ratio == "landscape" %}
  <style>
    @media(min-width: 1024px) {
      .tabs-image-relative-{{ section.id }} {
       aspect-ratio: 12/9; 
      }
    }
  </style>
{% elsif image_ratio == "square" %}
  <style>
    @media(min-width: 1024px) {
      .tabs-image-relative-{{ section.id }} {
       aspect-ratio: 12/12; 
      }
    }
  </style>
{% else%}
  <style>
    @media(min-width: 1024px) {
      .tabs-image-relative-{{ section.id }} {
       aspect-ratio: auto; 
      }
    }
  </style>
{% endif %}

{% for block in section.blocks %}  
  {% if block.settings.before_image_mobile != blank %}
    <style>
      .tabs-image-first-{{ section.id }} {
        display: none;
      }
      @media(min-width: 1024px) {
        .tabs-image-first-{{ section.id }} {
          display: block;
        }
        .tabs-image-mobile-{{ section.id }} {
          display: none;
        }
      }
    </style>
  {% endif %}

  {% if block.settings.after_image_mobile != blank %}
    <style>
      .tabs-image-second-{{ section.id }} {
        display: none;
      }
      @media(min-width: 1024px) {
        .tabs-image-second-{{ section.id }} {
          display: block;
        }
        .tabs-image-mobile-second-{{ section.id }} {
          display: none;
        }
      }
    </style>
  {% endif %}
{% endfor %}

<div class="section-{{ section.id }} tabs-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings">
      {% if heading != blank %}
        <div class="tabs-heading-{{ section.id }}">
          {{ heading }}
        </div>
      {% endif %}
      <div class="tabs-tabs-wrapper-{{ section.id }}">
        {% for block in section.blocks %}
          <p class="tabs-tab-{{ section.id }} {% if forloop.first %}active{% endif %}" id="{{ block.id }}">{{ block.settings.tab_title }}</p>
        {% endfor %}
        <div class="tabs-active-bg-{{ section.id }}"></div>
      </div>       
      <div class="tabs-content-wrap-{{ section.id }}">
        {% for block in section.blocks %}
          <div class="tabs-content-{{ section.id }} {% if forloop.first %}active{% endif %}" data-id="{{ block.id }}">
            <div class="tabs-text-wrap-{{ section.id }}">
              {% if block.settings.title %}
                <p class="tabs-title-{{ section.id }}">{{ block.settings.title }}</p>
              {% endif %}
              {% if block.settings.sub_text %} 
                <div class="tabs-subtext-{{ section.id }}">{{ block.settings.sub_text }}</div>
              {% endif %}
              {% if block.settings.text %} 
                <div class="tabs-text-{{ section.id }}">{{ block.settings.text }}</div>
              {% endif %}
            </div>     
            <div class="tabs-image-right-{{ section.id }}">
              <div class="tabs-image-wrapper-{{ section.id }}" style="--before-after-initial-drag-position: 50%; --clip-path-offset: 0px;">
                {% assign before_image = block.settings.before_image %}
                {% assign before_image_mobile = block.settings.before_image_mobile %}
                {% assign after_image = block.settings.after_image %}
                {% assign after_image_mobile = block.settings.after_image_mobile %}
                <div class="tabs-image-relative-{{ section.id }}" style=" position: relative;">
                  {% if before_image_mobile != blank %}
                    <img src="{{ before_image_mobile | image_url }}" alt="{{ before_image_mobile.alt }}" {% if lazy %}loading="lazy"{% endif %} draggable="false" class="tabs-image-{{ section.id }} tabs-image-mobile-{{ section.id }}">
                  {% endif %}
                  {% if before_image != blank %}
                    <img src="{{ before_image | image_url }}" alt="{{ before_image.alt }}" {% if lazy %}loading="lazy"{% endif %} draggable="false" class="tabs-image-{{ section.id }} tabs-image-first-{{ section.id }}">
                  {% else %}
                    {{  'image' | placeholder_svg_tag }}
                  {% endif %}
                  <p class="tabs-before-badge-{{ section.id }}">{{ block.settings.badge_before }}</p>
                </div>
                <div class="tabs-image-relative-{{ section.id }}" style="clip-path: inset(0 0 0 calc(var(--before-after-initial-drag-position, 50%) + var(--clip-path-offset, 0px))); position: absolute; top: 0; bottom: 0; left: 0; right: 0;">
                  {% if after_image_mobile != blank %}
                    <img src="{{ after_image_mobile | image_url }}" alt="{{ after_image_mobile.alt }}" {% if lazy %}loading="lazy"{% endif %} draggable="false" class="tabs-image-{{ section.id }} tabs-image-mobile-second-{{ section.id }}">
                  {% endif %}
                  {% if after_image != blank %}
                    <img src="{{ after_image | image_url }}" alt="{{ after_image.alt }}" {% if lazy %}loading="lazy"{% endif %} draggable="false" class="tabs-image-{{ section.id }} tabs-image-second-{{ section.id }}">
                  {% else %}
                    {{ 'image' | placeholder_svg_tag }}
                  {% endif %}
                  <p class="tabs-after-badge-{{ section.id }}">{{ block.settings.badge_after }}</p>
                </div>
                {% comment %} Cursor: {% endcomment %}
                <div style="position: absolute; top: 0; bottom: 0; left: 0; right: 0;">
                  <split-cursor class="tabs-image-cursor-{{ section.id }}">
                    <div class="tabs-button-{{ section.id }}"></div>
                  </split-cursor>
                </div>
                {% if block.settings.media_text != blank %}
                  <div class="tabs-media-text-{{ section.id }}">{{ block.settings.media_text }}</div>
                {% endif %}              
              </div>
            </div>         
          </div>
        {% endfor %}
      </div>
    </div>
</div>

<script>
  function initBeforeAfterImage6() {
    const tabs = document.querySelectorAll('.tabs-tab-{{ section.id }}');
    const tabsWrapper = document.querySelector('.tabs-tabs-wrapper-{{ section.id }}');
    const activeBg = document.querySelector('.tabs-active-bg-{{ section.id }}');
    const tabsContents = document.querySelectorAll('.tabs-content-{{ section.id }}');
    const imageWrappers = document.querySelectorAll('.tabs-image-wrapper-{{ section.id }}');

    let initialActiveTab = tabs[0];
    initialActiveTab.classList.add('active');
    initialActiveTab.style.color = '{{ tab_active_color }}';
    setActiveBgPosition(initialActiveTab);

    tabs.forEach(tab => {
      tab.addEventListener('mouseenter', () => {     
        tabs.forEach(e => {
          e.style.color = e.classList.contains('active') ? '{{ tab_color }}' : ''; 
        });
        tab.style.color = '{{ tab_active_color }}';
        setActiveBgPosition(tab); 
      });

      tab.addEventListener('click', () => {
        tabs.forEach(e => {
          e.classList.remove('active');
          e.style.color = '{{ tab_color }}';
        });
        if (tabsContents) {
          tabsContents.forEach(content => {
            if (tab.id == content.getAttribute('data-id')) {
              tabsContents.forEach(text => {
                text.classList.remove('active');
              });
              content.classList.add('active');
              tab.classList.add('active');
              tab.style.color = '{{ tab_active_color }}';
              initialActiveTab = tab;
              setActiveBgPosition(tab);
            }
          });
        }
      });
    });

    tabsWrapper.addEventListener('mouseleave', () => {
      tabs.forEach(e => e.style.color = '{{ tab_color }}'); 
      if (initialActiveTab) {
        initialActiveTab.style.color = '{{ tab_active_color }}';
        setActiveBgPosition(initialActiveTab);
      }
    });

    function setActiveBgPosition(tab) {
      const tabRect = tab.getBoundingClientRect();
      const wrapperRect = tabsWrapper.getBoundingClientRect();

      const offset = tabRect.left - wrapperRect.left;
      activeBg.style.width = `${tabRect.width}px`;
      activeBg.style.transform = `translateX(${offset}px)`;
    }

    imageWrappers.forEach(imageWrapper => {
      const cursor = imageWrapper.querySelector('.tabs-image-cursor-{{ section.id }}');

      let xStart, xEnd, xDiff, originalOffset;
      function dragStart(event) {
        xStart = event.clientX;
        originalOffset = imageWrapper.style
          .getPropertyValue('--clip-path-offset')
          .slice(0, -2);
        document.addEventListener('pointermove', dragMove);
        document.addEventListener('pointerup', dragEnd);
      }

      function dragMove(event) {
        xEnd = event.clientX;
        xDiff = xEnd - xStart;

        let result = xDiff + parseInt(originalOffset);
        let cursorOffsetPercent = parseFloat(getComputedStyle(imageWrapper).getPropertyValue('--before-after-initial-drag-position'));
        let containerWidth = imageWrapper.offsetWidth;
        let pixelsOffset = (cursorOffsetPercent / 100) * containerWidth;

        const negativeMax = -1 * (pixelsOffset);
        const positiveMax = imageWrapper.offsetWidth - pixelsOffset;
        if (result < negativeMax) {
          result = negativeMax;
        } else if (result > positiveMax) {
          result = positiveMax;
        }
        imageWrapper.style.setProperty(
          '--clip-path-offset',
          result + 'px'
        );
      }

      function dragEnd(event) {
        document.removeEventListener('pointermove', dragMove);
        document.removeEventListener('pointerup', dragEnd);
      }

      cursor.addEventListener('pointerdown', dragStart);
    });
  }

  document.addEventListener('DOMContentLoaded', initBeforeAfterImage6);

  if (Shopify.designMode) {
    document.addEventListener('shopify:section:unload', initBeforeAfterImage6);
    document.addEventListener('shopify:section:load', initBeforeAfterImage6);
  }
</script>


{% schema %}
  {
    "name": "SS - Before/after #6",
    "settings": [
      {
        "type": "header",
        "content": "Heading settings"
      },
      {
        "type": "richtext",
        "id": "heading",
        "label": "Heading",
        "default": "<h2>Before/after image #6</h2>"
      },
      {
        "type": "checkbox",
        "id": "heading_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "heading_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Font size",
        "default": 40
      },
      {
        "type": "range",
        "id": "heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 24
      },
      {
        "type": "range",
        "id": "heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 130
      },
      {
        "type": "text_alignment",
        "id": "heading_align",
        "label": "Alignment",
        "default": "center"
      },
      {
        "type": "text_alignment",
        "id": "heading_align_mobile",
        "label": "Alignment - mobile",
        "default": "center"
      },
      {
        "type": "header",
        "content": "Tabs settings"
      },
      {
        "type": "range",
        "id": "tabs_width",
        "min": 200,
        "max": 1200,
        "step": 10,
        "unit": "px",
        "label": "Max width",
        "default": 380
      },
      {
        "type": "range",
        "id": "tabs_width_mobile",
        "min": 200,
        "max": 1200,
        "step": 10,
        "unit": "px",
        "label": "Max width - mobile",
        "default": 320
      },
      {
        "type": "range",
        "id": "tabs_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 100
      },
      {
        "type": "range",
        "id": "tabs_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 2
      },
      {
        "type": "range",
        "id": "tabs_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top",
        "default": 40
      },
      {
        "type": "range",
        "id": "tabs_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top - mobile",
        "default": 24
      },
      {
        "type": "header",
        "content": "Tab settings"
      },
      {
        "type": "checkbox",
        "id": "tab_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "tab_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "tab_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 16
      },
      {
        "type": "range",
        "id": "tab_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 14
      },    
      {
        "type": "range",
        "id": "tab_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 100
      }, 
      {
        "type": "header",
        "content": "Layout settings"
      },
      {
        "type": "range",
        "id": "layout_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap",
        "default": 40
      },
      {
        "type": "range",
        "id": "layout_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Gap - mobile",
        "default": 30
      },
      {
        "type": "range",
        "id": "layout_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top",
        "default": 60
      },
      {
        "type": "range",
        "id": "layout_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top - mobile",
        "default": 30
      },
      {
        "type": "select",
        "id": "layout",
        "label": "Image placement",
        "default": "text_images",
        "options": [
          {
            "label": "Align image left",
            "value": "images_text"
          },
          {
            "label": "Align image right",
            "value": "text_images"
          }
        ]
      },
      {
        "type": "select",
        "id": "layout_mobile",
        "label": "Image placement - mobile",
        "default": "images_text",
        "options": [
          {
            "label": "Image on top",
            "value": "images_text"
          },
          {
            "label": "Text on top",
            "value": "text_images"
          }
        ]
      },
      {
        "type": "header",
        "content": "Text content settings"
      },
      {
        "type": "text_alignment",
        "id": "text_content_align",
        "label": "Alignment"
      },
      {
        "type": "text_alignment",
        "id": "text_content_align_mobile",
        "label": "Alignment - mobile"
      }, 
      {
        "type": "header",
        "content": "Title settings"
      },
      {
        "type": "checkbox",
        "id": "title_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "title_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "title_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Font size",
        "default": 40
      },
      {
        "type": "range",
        "id": "title_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 24
      },    
      {
        "type": "range",
        "id": "title_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 130
      }, 
      {
        "type": "header",
        "content": "Subtext settings"
      },
      {
        "type": "checkbox",
        "id": "sub_text_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "sub_text_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "sub_text_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 30
      },
      {
        "type": "range",
        "id": "sub_text_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 20
      },    
      {
        "type": "range",
        "id": "sub_text_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 130
      },     
      {
        "type": "range",
        "id": "sub_text_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top",
        "default": 10
      },
      {
        "type": "range",
        "id": "sub_text_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top - mobile",
        "default": 10
      },          
      {
        "type": "header",
        "content": "Text settings"
      },
      {
        "type": "checkbox",
        "id": "text_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "text_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "text_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 20
      },
      {
        "type": "range",
        "id": "text_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 18
      },    
      {
        "type": "range",
        "id": "text_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 150
      },     
      {
        "type": "range",
        "id": "text_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top",
        "default": 50
      },
      {
        "type": "range",
        "id": "text_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Margin top - mobile",
        "default": 30
      },  
      {
        "type": "header",
        "content": "Before/after image settings"
      },      
      {
        "type": "range",
        "id": "image_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 0
      },
      {
        "type": "range",
        "id": "image_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "select",
        "id": "image_ratio",
        "label": "Aspect ratio",
        "default": "landscape",
        "options": [
          {
            "label": "Portrait",
            "value": "portrait"
          },
          {
            "label": "Square",
            "value": "square"
          },
          {
            "label": "Landscape",
            "value": "landscape"
          },
          {
            "label": "Original",
            "value": "original"
          }
        ]
      },
      {
        "type": "select",
        "id": "image_ratio_mobile",
        "label": "Aspect ratio - mobile",
        "default": "landscape",
        "options": [
          {
            "label": "Portrait",
            "value": "portrait"
          },
          {
            "label": "Square",
            "value": "square"
          },
          {
            "label": "Landscape",
            "value": "landscape"
          },
          {
            "label": "Original",
            "value": "original"
          }
        ]
      }, 
      {
        "type": "header",
        "content": "Button settings"
      },
      {
         "type": "range",
         "id": "btn_size",
         "min": 50,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Size",
         "default": 56
      },
      {
         "type": "range",
         "id": "btn_size_mobile",
         "min": 50,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Size - mobile",
         "default": 56
      },
      {
         "type": "range",
         "id": "btn_arrow_size",
         "min": 100,
         "max": 200,
         "step": 5,
         "unit": "%",
         "label": "Arrow size",
         "default": 100
      },
      {
         "type": "range",
         "id": "btn_arrow_size_mobile",
         "min": 100,
         "max": 200,
         "step": 5,
         "unit": "%",
         "label": "Arrow size - mobile",
         "default": 100
      },
      {
         "type": "range",
         "id": "btn_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Border thickness",
         "default": 2
      }, 
      {
        "type": "header",
        "content": "Badge settings"
      },
      {
        "type": "range",
        "id": "badge_padding_horizontal",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding horizontal",
        "default": 16
      },
      {
        "type": "range",
        "id": "badge_padding_horizontal_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding horizontal - mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "badge_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding vertical",
        "default": 10
      },
      {
        "type": "range",
        "id": "badge_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding vertical - mobile",
        "default": 10
      },
      {
        "type": "range",
        "id": "badge_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "badge_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "badge_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "badge_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 14
      },
      {
        "type": "range",
        "id": "badge_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 14
      },    
      {
        "type": "range",
        "id": "badge_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 100
      }, 
      {
        "type": "header",
        "content": "Media text settings"
      },
      {
        "type": "checkbox",
        "id": "media_text_custom",
        "label": "Use custom font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "media_text_font",
        "label": "Font family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "media_text_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size",
        "default": 12
      },
      {
        "type": "range",
        "id": "media_text_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Font size - mobile",
        "default": 12
      },    
      {
        "type": "range",
        "id": "media_text_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Line height",
        "default": 150
      }, 
      {
        "type": "header",
        "content": "Tab colors"
      },
      {
        "type": "color",
        "label": "Text",
        "id": "tab_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Active tab text",
        "id": "tab_active_color",
        "info": "Save settings to view updates",
        "default": "#FFFFFF"
      },  
      {
        "type": "color",
        "label": "Active tab background",
        "id": "tab_active_bg_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "tabs_border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Text content colors"
      },
      {
        "type": "color",
        "label": "Title",
        "id": "title_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Subtext",
        "id": "sub_text_color",
        "default": "#B3B3B3"
      },
      {
        "type": "color",
        "label": "Text",
        "id": "text_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Before/after image colors"
      },
      {
        "type": "color",
        "label": "Text",
        "id": "media_text_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "btn_border_color",
        "label": "Button border",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Vertical line",
        "id": "line_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "image_border_color",
        "label": "Image border",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Badge colors"
      },
      {
        "type": "color",
        "label": "Text",
        "id": "badge_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Background",
        "id": "badge_bg_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section colors"
      },      
      {
        "type": "color",
        "label": "Heading",
        "id": "heading_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient",
        "info": "Remove gradient to replace with solid colors"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Margin sides",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Margin sides mobile",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 36
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 36
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 5
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 1.5
      },
      {
        "type": "header",
        "content": "Section settings"
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full width",
        "default": false
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 800,
        "max": 2000,
        "step": 100,
        "unit": "px",
        "label": "Section content width",
        "default": 1200
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "range",
        "id": "section_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Section roundness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "lazy",
        "label": "Lazy load",
        "info": "Lazy load images for speed optimisation",
        "default": true
      }
    ],
    "blocks": [
      {
        "type": "tab",
        "name": "Tab",
        "settings": [          
          {
            "type": "text",
            "id": "tab_title",
            "label": "Tab",
            "default": "Tab"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Title"
          },
          {
            "type": "richtext",
            "id": "sub_text",
            "label": "Subtext",
            "default": "<p>Subtext</p>"
          },
          {
            "type": "richtext",
            "id": "text",
            "label": "Text",
            "default": "<p>Showcase your product benefit by using before/after image comparison.</p>"
          },
          {
            "type": "image_picker",
            "id": "before_image",
            "label": "Before image"
          },
          {
            "type": "image_picker",
            "id": "before_image_mobile",
            "label": "Before image - mobile (optional)"
          },
          {
            "type": "text",
            "id": "badge_before",
            "label": "Badge before text",
            "default": "Before"
          }, 
          {
            "type": "image_picker",
            "id": "after_image",
            "label": "After image"
          },
          {
            "type": "image_picker",
            "id": "after_image_mobile",
            "label": "After image - mobile (optional)"
          },         
          {
            "type": "text",
            "id": "badge_after",
            "label": "Badge after text",
            "default": "After"
          },
          {
            "type": "richtext",
            "id": "media_text",
            "label": "Media text",
            "default": "<p>Media text</p>"
          }
          
        ]
      }
    ],
    "presets": [
      {
        "name": "SS - Before/after image #6",
        "blocks": [
          {
            "type": "tab"
          },
          {
            "type": "tab"
          },
          {
            "type": "tab"
          }
        ]
      }
    ]
  }
{% endschema %}